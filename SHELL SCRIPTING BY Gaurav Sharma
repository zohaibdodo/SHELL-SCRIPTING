Youtube Videos by Gaurav Sharma:
Date: 6 June 2022 10:08PM

#Video 1: Introduction to Playlist

#Video 2: What and Why shell scripting

#Video 3: Built-in, Keywords and Commands in Shellscript
To check which word is buildin, command or Keywords

type -a echo

if command is shell buildin then it will execute directly and if command is not found it will search in ($PATH) which is predefined.

If you want to show echo with colors then:
echo -e "\033[0;31m Success message here"
echo -e "\033[0;32m Success message here"
echo -e "\033[0;33m Success message here"

#Video 7: Comments

"#" Use hash for comments.

Single quote  ' ' is called strong quote which prints as it is.

"\t" tab which is almost 8 spaces.
"\v" vertical tab.
"\n" for new lines.

#Video 9:

User define variables
System define variables 

use variable like "${name}

for concatenate variables: ${name}${age}

variable names cannot be reserved words.
Variable name cannot have whitespace in between them.
the variable name cannot have special characters.
the first character of the variable name cannot be a number. 

#Video 10:

$env

We use system variable in capital letters.

echo ${HOME}
echo ${$}       # process id
echo ${PPID}    # parent process id

#Video 11:

#! /bin/bash

read -p "Please enter your name:" name 
read -p "Please enter your age:" age

echo "Your name is $name and your age is $age"

For secret password:

Use -s for secret password

#Video 12: Command line arguments

You take input from command while running script

#! /bin/bash

echo ${0}
echo ${1}
echo ${2}

$./commandlineargument.sh "zohaib" "shabbir" 3

#Video 13:

use curly braces instead while giving command line argument.

echo $# count for command line arguments
echo $@ print all command line arguments

#Video 14:

Use ` ` back tick or round brakets ( ) to save output of command in variable

date_time=$(date +"%D-%T")

#Video 15: Readonly variable

#Video 16: How to Convert a String to Upper and Lower Case in Shell Script

For Upper case:
echo "${string}"
echo "${string^}"
echo "${string^^}"

For Lower case:
echo "${string}"
echo "${string,}"
echo "${string,,}"

${#string} this will print length of string variable

Video 17: How to Convert a String to SubString - String Manipulation

string="abcdefghijklmnopqrstuvwxyz"

echo "${string:0} # This will print from very first letter.
echo "${string:1} # This will skip first letter and start printing from second letter.

echo "${string:0:3} # This will start from 0 and go till three letters.
echo "${string: -5} # This will start from left and go till five letters.

echo "${string#a*c} # from starting,  Shortest
echo "${string##a*c} # from starting, longest match

Video 18: How to Set Default Value of a Variable - Variable Default Value

For Default value:
read -p "Please enter your name:"
name=${name:-World}
echo "Hello ${name^}"

For unset variable:
yourname=${unsetvariable-Manish}
echo $yourname

For empty string variable:
myname=""
mytestname=${myname-Kali}
echo ${mytestname}

#Video 19: Check is Command line variable passed or not

":" is called Null command which always shows successful status.

#If variable is set

#! /bin/bash

name="Gaurav"
: ${name :? "Please enter variable values."}
echo "I am here"

#Video 26: What is $? and test command in linux

echo $? # for exit status

a=5
test $a -eq 5

0 #result

#Video 27:

if command
then block (command or statement)
fi

Video 28: How to Use If With [ (Square brackets)-Integer Comparison Shellscript

test command and square brackets are used  to comparison

#! /bin/bash

num=5

if [ $num -eq 5 ]
then 
    echo "Number is 5"
fi

# man test for all the comparison details

Video 28: Shell Script tutorials - 28 - [ vs [[ in Shellscript and String Comparison in Shellscript

[ "zohaib" == "zohaib" ]

Use double square brackets for comparisons.

name="zohaib ahmed"
if [[ -n ${name} ]]
then 
  echo "length of string is non zero"
fi

-n "non zero"
-z "zero"
!= "not equal to"

Video 29: How to Check File is Exist, Directory, Block Device, Character Device

#! /bin/bash

file_full_path="/home"

if [[ -d $file_full_path ]]
then 
  echo "$file_full_path is a dir"
fi

man test for complete 

-d directory
-b block
-c charactor
-e file exist
-r read
-w write

Video 30: What is Not Operator in Shellscript - How to use not operator in bash

#! /bin/bash

name="saurav sharma"
othername="gaurav sharma"

if [[ ! ${name} == ${othername} ]]
then
    echo "both are same"
fi

Video 31: AND operator in Shellscript - && in shellscript

#! /bin/bash

OS_TYPE=$(uname)

if [[ ${OS_TYPE} == "Linux" && ${UID} -eq 1000 ]]
then
    echo "User is root user and OS is Linux"
fi

Video 32: OR Operator

Video 33: If-Else In Shellscript - If-Else Syntax In Shellscript

